q()
# Then load the package by using either of the following:
require(pacman)  # Gives a confirmation message.
# I recommend "pacman" for managing add-on packages. It will
# install packages, if needed, and then load the packages.
install.packages("pacman")
# Then load the package by using either of the following:
require(pacman)  # Gives a confirmation message.
library(pacman)  # No message.
# Or, by using "pacman::p_load" you can use the p_load
# function from pacman without actually loading pacman.
# These are packages I load every time.
pacman::p_load(pacman, dplyr, GGally, ggplot2, ggthemes,
ggvis, httr, lubridate, plotly, rio, rmarkdown, shiny,
stringr, tidyr)
library(datasets)  # Load/unload base packages manually
head(iris)
head(iris)
?plot  # Help for plot()
plot(iris$Species, iris$Petal.Width)  # Cat x quant
plot(iris$Petal.Length)  # Quantitative variable
a <- 1
a
sample(x = 1:6 , size = 3)
die <- 1:6
sample( x = die , size = 1)
args(round)
args(sample)
sample( x = die , size = 5 , replace = TRUE)
die <- sample( x = die , size = 5 , replace = TRUE)
DIE
die
die
sum(die)
dice <- die
dice
dice
dice
die
die
die <- sample( x = die , size = 5 , replace = TRUE)
die
die
# wont rerun the program
roll()
my_function <- function() {}
roll <- function() {}
roll <- function() {}
roll <- function() {.}
roll <- function() {die <- 1:6}
roll <- function() {die <- 1:6 dice <- sample(die, size = 2 , replace = TRUE) sum(dice)}
roll <- function() {
die <- 1:6
dice <- sample(die, size = 2 , replace = TRUE)
sum(dice)}
roll <- function()
roll <- function() {
die <-1:6
dice <- sample(die,size = 2, replace = TRUE)
sum(dice)
}
roll()
()
roll()
roll <- function() {
die <-1:6
dice <- sample(die,size = 2, replace = TRUE)
sum(dice)
1 + 1
sqrt(2)
}
roll()
roll2 <- function(bones) {
dice <- sample(bones, size = 2 , replace = TRUE)
sum(dice)
}
roll2 <- function(bones) {
dice <- sample(bones, size = 2 , replace = TRUE)
sum(dice)
}
roll2()
roll2(bones = 1:9)
roll2(bones = 1:9)
roll2(bones = 1:9)
source('~/.active-rstudio-document')
# this is a script for R
# this is a script for R
# this is a script for R
# this is a script for R
# this is a script for R
roll2(bones = 1:9)
deck <- read.csv("C:/Users/ziyan/Downloads/9629323-ee5dfc039fd581cb467cc69c226ea2524913c3d8/9629323-ee5dfc039fd581cb467cc69c226ea2524913c3d8/deck.csv")
View(deck)
die <- c(1,2,3,4,5,6)
names(die)
names(die) <- c("one","two","three","four","five","six")
names(die)
attributes(die)
die
#assigning the name attribute to the die
#to remove the names attribute set it to NULL
names(die)<- NULL
die
now <- Sys.time()
now
hands <- c("ace","king","queen","jack","ten","spade","spade","spade","spade","spade","spade")
matrix(hands, nrow = 5)
matrix(hands, ncol = 2)
hands <- c("ace","king","queen","jack","ten","spade","spade","spade","spade","spade")
matrix(hands, ncol = 2)
df <- data.frame(face= c("ace","two","six"),
suits = c("clubs","clubs","clubs"),
value = c(1,2,3))
df
write.csv(deck,file = "cards.csv", row.names = FALSE)
getwd()
deck <- read.csv("C:/Users/ziyan/Downloads/9629323-ee5dfc039fd581cb467cc69c226ea2524913c3d8/9629323-ee5dfc039fd581cb467cc69c226ea2524913c3d8/deck.csv")
View(deck)
View(deck)
head(deck)
write.csv(deck,file = "cards.csv",row.names=FALSE)
?write.csv
?setwd
setwd("~C:\Users\ziyan\OneDrive\Desktop\Hands-On programming with R")
setwd("~/Users/ziyan/OneDrive/Desktop/Hands-On programming with R")
setwd("C:/Users/ziyan/OneDrive/Desktop/Hands-On programming with R")
